library(DBI)
library(odbc)
library(tidyverse)
library(readr)
library(stringdist)
library(reshape2)
library(stringi)


source` <-
  read_csv("PrivateData/source1.csv")

con <- dbConnect(
  odbc(),
  Driver = "SQL Server",
  Server = "servername",
  Database = "databasename",
  Trusted_Connection = "True"
)

x <- tibble(tableName = dbListTables(con))
x %>%
  filter(str_detect(tableName, 'Company'))

tCompany <- tbl(con, "tCompany") %>%
  select(ShortName, LongName, Status) %>%
  filter(Status == 1) %>%
  collect()


m <- tCompany %>%
  inner_join(source1,
             by = c("ShortName" = "CorporateSupplierName")) %>%
  select(LongName)
m2 <- tCompany %>%
  inner_join(source1,
             by = c("LongName" = "CorporateSupplierName")) %>%
  select(LongName)
m3 <- union(m, m2)

m3 %>% write.csv(file = "PrivateData/Supplier.csv")


# fuzzy matching
distance.methods <-
  c('cosine')# 'osa', lv','dl','hamming','lcs','qgram','cosine','jaccard','jw')
dist.methods <- list()

#for columns
source1 <- source1 %>%
  mutate(stringToMatch = stri_trans_tolower(CSL_inactive_companies$CorporateSupplierName)) %>%
  select(stringToMatch) 

#for rows
source2 <-   tCompany %>%
  mutate(stringToMatch = stri_trans_tolower(tCompany$LongName)) %>%
  select(stringToMatch) %>%
  top_n(200, stringToMatch)


for (m in 1:length(distance.methods))
{
  dist.name.enh <- matrix(
    NA,
    ncol = length(source1$stringToMatch),
    nrow = length(source2$stringToMatch)
  )
  
  for (i in 1:length(source1$stringToMatch)) {
    for (j in 1:length(source2$stringToMatch)) {
      dist.name.enh[j, i] <- stringdist(
        stri_trans_tolower(source2[j, ]$stringToMatch),
        stri_trans_tolower(source1[i, ]$stringToMatch),
        method = distance.methods[m]
      )
    }
  }
}

dist.matrix <- as.matrix(dist.name.enh)
min.name.enh <- apply(dist.matrix, 1, base::min)

match.s1.s2.enh <- NULL
for (i in 1:nrow(dist.matrix))
{
  s2.i <- match(min.name.enh[i], dist.matrix[i, ])
  s1.i <- i
  match.s1.s2.enh <- rbind(
    data.frame(
      s2.i = s2.i,
      s1.i = s1.i,
      CSL_name = source1[s2.i, ]$stringToMatch,
      tCompany_name = source2[s1.i, ]$stringToMatch,
      adist = min.name.enh[i],
      method = distance.methods[m]
    ),
    match.s1.s2.enh
  )
}

# Let's have a look at the results
matched.names.matrix <- dcast(match.s1.s2.enh,
                              s2.i + s1.i + CSL_name + tCompany_name ~ method,
                              value.var = "adist")
View(matched.names.matrix)

#fuzzy join
library(fuzzyjoin)

d <-
  stringdist_inner_join(tCompany,
                        CSL_inactive_companies,
                        by = "name",
                        max_dist = 1)
